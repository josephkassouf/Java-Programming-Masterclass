CONSTRUCTOR
    -> Constructor is used in the creation of an object, that's an instance of a class.
    -> It has the same name as the class itself, and it doesn;t return any values.
    -> You should specify an appropriate access modifier, to control who should be able to create new instances of the class.
    e.g.
    public class Account { // This is the class declaration
        public Account() { // This is the constructor declaration
            // Constructor code is code to be executed as the object is created
        }
    }

THE DEFAULT CONSTRUCTOR
    -> If a class contains no constructor declarations, then a default constructor is implicitly declared.
    -> This constructor has no parameters, and is often called the o-args constructor.
    -> If a class contains any other constructor declarations, then a default constructor is NOT implicitly declared.

CONSTRUCTOR OVERLOADING
    -> Constructor overloading is declaring multiple constructors with different formal parameters.
    -> The number of parameters can be different between constructors.
    -> Or if the number of parameters is the same, their types or order of the types must differ.

CONSTRUCTOR CHAINING WITH THIS()
    -> Constructor chaining is when one constructor calls another overloaded constructor.
    -> You can call a constructor only from another constructor.
    -> You must use th special statement this() to execute another constructor, passing it arguments f required.
    -> And this() must be the first executable statement, if it's used from another constructor.
